#!/bin/bash
set -o nounset
source "$( dirname "$(readlink -f "$0")" )/variables.sh"

# This script is run on the host.
# It launches the docker container and runs our hello world command.

# call first
function checkingmsg { PFMSG="$1" ; echo -e "[ \e[2m?\e[0m ] $PFMSG">&2 ; }
function passmsg { echo -e "[ \e[32m\u2714\e[0m ] $PFMSG" >&2 ; }
function failmsg { echo -e "[ \e[31m\e[1m\u2718\e[0m ] $PFMSG" >&2 ; }

# call second to rewrite with tick/cross
# passfail VALUETOTEST INVERT
function passfail {
   # go up a line
   echo -en "\e[1A">&2
   # rewrite, 0 = pass/yes, not 0 = fail/no
   [ "$2" -eq 0 ] && [ "$1" -eq 0 ] && passmsg && return
   [ "$2" -ne 0 ] && [ "$1" -ne 0 ] && passmsg && return
   failmsg
   RVAL=1
}

function title {
   echo " ">&2
   echo " ">&2
   echo -e "\e[1;4;32m${1}\e[0m">&2
   echo " ">&2
}

# works when there's nothing tricky in the string.
# testcommand COMMAND INVERT
function testcommand {
   local MYCMD="$1"
   checkingmsg "$MYCMD"
   bash -c "$MYCMD" >/dev/null 2>&1
   passfail $? ${2:-0}
}


function testservice {
   local SERVICENAME="$1"  
   
   testcommand "${SERVICENAME} help"
   testcommand "${SERVICENAME} commandthatdoesntexist" 1
   testcommand "${SERVICENAME} selftest"
}

function testdrunner {
   local IMAGENAME="$1"

   title "Testing $IMAGENAME"
   
   local SERVICE="test-${IMAGENAME//[![:alnum:]]/}"
   
   checkingmsg "create tempdir"
   local TEMPDIR="$(mktemp -d)"
   PFMSG="create tempdir ${TEMPDIR}"
   passfail $? 0
   
   ( #subshell, so if we exit we still clean up
      testcommand "drunner install ${IMAGENAME} ${SERVICE}"
      testcommand "drunner update ${SERVICE}"
            
      checkingmsg "drunner enter ${SERVICE} -c \"echo hi\""
      drunner enter "${SERVICE}" -c "echo hi" >/dev/null 2>&1
      passfail $? 0
           
      local PASS="password123"
      testcommand "PASS=${PASS} drunner backup ${SERVICE} ${TEMPDIR}/backup"
      testcommand "PASS=${PASS} drunner restore ${TEMPDIR}/backup ${SERVICE}-clone"
      testcommand "drunner update ${SERVICE}-clone"

      testservice "${SERVICE}"
      testservice "${SERVICE}-clone"
      
      # exit the subshell.
      exit "$RVAL"
   )
   RVAL=$?
   
   testcommand "drunner destroy ${SERVICE}-clone"
   testcommand "drunner destroy ${SERVICE}"
   testcommand "rm -r ${TEMPDIR}"
   
   echo " ">&2
}


RVAL=0
testdrunner ${1:-$IMAGENAME}
exit $RVAL

# http://patorjk.com/software/taag/#p=display&f=Univers&t=dRunner
# http://shapecatcher.com/
# http://misc.flogisoft.com/bash/tip_colors_and_formatting

